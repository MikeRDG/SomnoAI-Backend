name: Build and Push Image to AWS ECR

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:

  build-and-push-master:
    name: Build and Push to ECR for Master
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push the Image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: somnoai
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster somnoai-cluster --service somnoAI-prod-task-service-i54wto95 --force-new-deployment --region eu-central-1

      - name: Send Telegram notification on success
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: 'Deployment  Somno-Ai to AWS ECR  was successful.'

      - name: Wait for ECS service to stabilize
        id: wait-for-update
        run: |
          echo "Waiting for ECS service to stabilize..."
          aws ecs wait services-stable --cluster somnoai-cluster --services psomnoAI-prod-task-service-i54wto95 --region eu-central-1
          echo "Service has stabilized!"

      - name: Notify success to Telegram
        if: ${{ steps.wait-for-update.outcome == 'success' }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: 'Deployment Aomno-Ai to AWS ECS  was successful and all services are updated.'

